{{- range $name, $ns := .Values.noths_services }}
{{- $deployment := $ns.deployment | deepCopy }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}-blue
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "noths-service-ha.labels" $ | nindent 4 }}
    app: {{ template "noths-service-ha.name" $ }}
    chart: {{ template "noths-service-ha.chart" $ }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
    version: blue
spec:
  {{- if not $.Values.autoscaling.enabled }}
  replicas: {{ $ns.defaultReplicCount | default $.Values.defaultReplicaCountBlue }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "noths-service-ha.selectorLabels" $ | nindent 6 }}
      app: {{ template "noths-service-ha.name" $ }}
      release: {{ $.Release.Name }}
      version: blue
      {{- if $.Values.rbac.create }}
      role: {{ template "noths-service-ha.serviceAccountName" $ }}
      {{- end }}
  template:
    metadata:
      {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "noths-service-ha.selectorLabels" $ | nindent 8 }}
        app: {{ template "noths-service-ha.name" $ }}
        release: {{ $.Release.Name }}
        version: blue
        {{- if $.Values.rbac.create }}
        role: {{ template "noths-service-ha.serviceAccountName" $ }}
        {{- end }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "noths-service-ha.serviceAccountName" $ }}
      securityContext:
        {{- get $ns "podSecurityContext" | default $.Values.defaultSecurityContext | toYaml | nindent 8 }}
      containers:
        - name: {{ template "noths-service-ha.name" $ }}-blue
          securityContext:
            {{- $psc := $ns.podSecurityContext | default dict }}
            {{- $mergeSecurityContextCopy := deepCopy $.Values.defaultSecurityContext | mustMerge $psc }}
            {{- $mergeSecurityContextCopy | toYaml | nindent 12 }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tagBlue | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $deployment.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- $mergeResourcesCopy := deepCopy $.Values.defaultResources | mustMerge $deployment.resources }}
            {{- $mergeResourcesCopy | toYaml | nindent 12 }}
          env:
            # TODO - if lots of envs are supplied by terraform got figure out a sane way to pass all
            # standard env stuff the Vam has created into the tf-module-noths-eks-service and or look it
            # up from SSM
            {{- range $key, $value := .env }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
            {{- range $secretName, $values := .secrets }}
            {{- range $key, $value := $values }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ template "noths-service-std.name" $ }}-{{ $secretName | lower }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        name: {{ $.Release.Namespace }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}